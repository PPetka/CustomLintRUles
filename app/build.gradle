apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    flavorDimensions "default"
    defaultConfig {
        applicationId "com.ppetka.samples.customlintrules"
        minSdkVersion 23
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        firstFlavor{}

        secondFlavor{}

        thridFlavor{}
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:design:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

def publish = project.tasks.create("publishAllDebugVariants")

android.productFlavors.all { flavor ->
    def task = project.tasks.create("publish${flavor.name}Apk", Copy)

    def outputFileDir = project.projectDir.toString() + '\\build\\outputs\\apk\\'+flavor.name+'\\debug'
    task.from(outputFileDir)
    task.into(project.projectDir.getParentFile().toString()+'\\everyFlavorDebugApks')
    task.include '**/*.apk'

    task.dependsOn assemble
    publish.dependsOn task
}

